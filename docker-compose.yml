version: '3.8'
#Also you can use these if you do not want to build own local
#server: `isikhi/go-rate-limiter:app-0.1.0`
#migrate_server: `isikhi/go-rate-limiter:migrate-0.1.0`
#seed_server: `isikhi/go-rate-limiter:seed-0.1.0`
services:
  server:
    image: "server"
    container_name: "server_container"
    env_file:
      - .env
    build:
      context: .
      args:
        - MAIN_GO_FILE_PATH=./cmd/app/main.go
      dockerfile: Dockerfile
    ports:
      - 0.0.0.0:${API_PORT}:${API_PORT}
      - 0.0.0.0:${API_RPCPORT}:${API_RPCPORT}
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
      - migrate_server
      - seed_server

  migrate_server:
    image: "migrate_server"
    container_name: "migrate_server_container"
    env_file:
      - .env
    build:
      context: .
      args:
        - MAIN_GO_FILE_PATH=./cmd/migrate/main.go
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - redis
      - postgres

  seed_server:
    image: "seed_server"
    container_name: "seed_server_container"
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MAIN_GO_FILE_PATH=./cmd/seed/main.go
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
      - migrate_server

  postgres:
    image: "postgres:16.0"
    restart: always
    container_name: "go8_postgres"
    healthcheck:
      test: pg_isready -U ${DB_USER}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 0.0.0.0:${DB_PORT}:5432
    expose:
      - "5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./scripts/create-db.sh:/docker-entrypoint-initdb.d
    networks:
      - app-network

  redis:
    image: 'redis:7.2'
    restart: always
    ports:
      - 0.0.0.0:${REDIS_PORT}:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-network

volumes:
  postgres:

networks:
  app-network:
    name: app-network
    driver: bridge

// Code generated by ent, DO NOT EDIT.

package ratelimitoptions

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the ratelimitoptions type in the database.
	Label = "rate_limit_options"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldClientID holds the string denoting the client_id field in the database.
	FieldClientID = "client_id"
	// FieldTokenCount holds the string denoting the token_count field in the database.
	FieldTokenCount = "token_count"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the ratelimitoptions in the database.
	Table = "rate_limit_options"
)

// Columns holds all SQL columns for ratelimitoptions fields.
var Columns = []string{
	FieldID,
	FieldClientID,
	FieldTokenCount,
	FieldDuration,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the RateLimitOptions queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByClientID orders the results by the client_id field.
func ByClientID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClientID, opts...).ToFunc()
}

// ByTokenCount orders the results by the token_count field.
func ByTokenCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTokenCount, opts...).ToFunc()
}

// ByDuration orders the results by the duration field.
func ByDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDuration, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
